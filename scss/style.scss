// Color variables
$color-primary-light: #7ed56f;
$color-primary: #55c57a;
$color-primary-dark: #28b485;
$color-grey-dark: #777;
$color-white: #ffffff;
$color-black: #000000;

/* Basic reset */
*,
*::before,
*::after {
  margin: 0;
  padding: 0;
  box-sizing: inherit;
}

/* change the global font size*/
html {
  font-size: 62.5%;
}

body {
  /* Font related styles to be inherited */
  font-family: 'Lato', sans-serif;
  font-size: 1.6rem;
  font-weight: 400;
  line-height: 1.7;
  color: $color-grey-dark;
  /* Container styles not inherited*/
  padding: 3rem;
  box-sizing: border-box;
}

/* 
Header component
 */
/* container related styles */
.header {
  height: 95vh;
  background-image: linear-gradient(
      to right bottom,
      rgba($color-primary-light, 0.801),
      rgba($color-primary-dark, 0.801)
    ),
    url(../img/hero.jpg); /* Backgrounds in order*/
  background-size: cover; /* Apapts image to viewport */
  background-position: top; /* Makes sure image is always positioned to the top */
  clip-path: polygon(
    0 0,
    100% 0,
    100% 75%,
    0 95%
  ); /* define coordinates respective to x y */
  position: relative; /* this enables a reference for absolutely positioned direct child elements */

  /* 
  Header Logo 
  */
  // logo container
  &__logo-box {
    position: absolute; /* Absolutely positioned in parent container (Header)*/
    top: 4rem;
    left: 4rem;
  }
  // logo
  &__logo {
    height: 3.5rem;
  }

  /* 
  Header content
  */
  &__text-box {
    position: absolute; /* Absolutely positioned in parent container (Header)*/
    top: 40%; /* in relation to parent (header)*/
    left: 50%; /* in relation to parent (header)*/
    transform: translate(
      -50%,
      -50%
    ); /* Transform refers to the element itself. 
    Positioning the elemnent by translating its x and y values into space. so translating position in regards to its width and height*/
    text-align: center; /* Applies to inline & | block elements */
  }
}

/* 
Heading component
*/
/* Heading container */
.heading-primary {
  color: $color-white;
  text-transform: uppercase;
  /* backface-visibility hack for animated or transformed element shaking prevention */
  backface-visibility: hidden;
  margin-bottom: 5rem;

  /* Main heading span */
  &--main {
    display: block; /* Spans are inline elements by default so this allows us to make it occupy 100%w of heading element*/
    font-size: 6rem;
    font-weight: 400;
    letter-spacing: 3.5rem;
    animation: move-in-right 3s ease-in-out;
    /* 
    animation-name: move-in-right;
    animation-duration: 3s;
    animation-timing-function: ease-in-out;
    */
  }
  /* Sub heading span*/
  &--sub {
    display: block; /* Spans are inline elements by default so this allows us to make it occupy 100%w of heading element*/
    font-size: 2rem;
    font-weight: 700;
    letter-spacing: 1.74rem;
    animation: move-in-left 3s ease-in-out;
    /* 
    animation-name: move-in-left;
    animation-duration: 3s;
    animation-timing-function: ease-in-out;
    */
  }
}

/* Heading animations */
@keyframes move-in-right {
  0% {
    opacity: 0;
    transform: translateX(-100%);
  }
  80% {
    transform: translateX(1.5%);
  }
  100% {
    opacity: 1;
    transform: translate(0);
  }
}

@keyframes move-in-left {
  0% {
    opacity: 0;
    transform: translateX(100%);
  }
  80% {
    transform: translateX(-1.5%);
  }
  100% {
    opacity: 1;
    transform: translate(0);
  }
}

/* Button component */
.btn {
  &:link,
  &:visited {
    text-transform: uppercase;
    text-decoration: none;
    padding: 1.5rem 4rem;
    display: inline-block; /* Keeps the inline width and places as block */
    border-radius: 100px;
    transition: all 0.3s; /* time transitions for all props to .5s*/
    /* backface-visibility hack for animated or transformed element shaking prevention */
    backface-visibility: hidden;
    position: relative;
  }
  // after element
  &::after {
    content: '';
    display: inline-block;
    height: 100%;
    width: 100%;
    border-radius: 10rem;
    position: absolute; /* refers to .btn:visited, .btn:link*/
    /* position it parallel to btn*/
    top: 0;
    left: 0;
    z-index: -1;
    /* manage transition */
    transition: all 0.4s;
  }

  /* on hover */
  &:hover {
    transform: translateY(-6%);
    box-shadow: 0 1rem 2rem rgba($color-black, 0.3);
    // after element hover
    &::after {
      /* scale element on hover transition */
      transform: scale(1.5, 2);
      /* and fade it */
      opacity: 0;
    }
  }

  /* on click */
  &:active {
    transform: translateY(-1%);
    box-shadow: 0 0.5rem 2rem rgba($color-black, 0.1);
  }

  /* White buttons */
  &--white {
    background-color: $color-white;
    color: $color-grey-dark;
    &::after {
      background-color: $color-white;
    }
  }

  &--animated {
    animation: move-in-button 3s ease-in-out 1.5s backwards;
    /* 
    animation-name: move-in-button;
    animation-duration: 3s;
    animation-timing-function: ease-in-out;
    animation-delay: 1.5s;
    animation-fill-mode: backwards; --------> Sets the load value of the animated element props to the 0% value in animation.
    */
  }
}

/* Heading Button animation */
@keyframes move-in-button {
  0% {
    transform: translateY(50%);
    opacity: 0;
  }
  100% {
    transform: translateY(0);
    opacity: 1;
  }
}
